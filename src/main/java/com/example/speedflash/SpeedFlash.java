package com.example.speedflash;

import org.bukkit.plugin.java.JavaPlugin;
import com.example.speedflash.utils.ConfigManager;
import com.example.speedflash.utils.Messages;
import com.example.speedflash.effects.EffectsManager;
import com.example.speedflash.integration.DatabaseManager;
import com.example.speedflash.integration.IntegrationManager;
import com.example.speedflash.commands.SpeedFlashCommand;
import com.example.speedflash.commands.SpeedFlashGUICommand;
import com.example.speedflash.commands.SpeedFlashPermissionsCommand;
import com.example.speedflash.listener.PlayerListener;
import com.example.speedflash.listener.ChatListener;
import com.example.speedflash.listener.EntityListener;

public class SpeedFlash extends JavaPlugin {
    private static SpeedFlash instance;
    private ConfigManager configManager;
    private Messages messages;
    private EffectsManager effectsManager;
    private DatabaseManager databaseManager;
    private IntegrationManager integrationManager;
    private WebServer webServer;
    private long startTime;

    @Override
    public void onEnable() {
        this.startTime = System.currentTimeMillis();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
        if (getConfig().getBoolean("web.enabled", true)) {
            this.webServer = new WebServer(this);
            webServer.start();
        }
    }

    @Override
    public void onDisable() {
        if (webServer != null) {
            webServer.stop();
        }
    }

    public long getStartTime() {
        return startTime;
    }

    @Override
    public void onEnable() {
        instance = this;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        this.configManager = new ConfigManager(this);
        this.messages = new Messages(this);
        this.effectsManager = new EffectsManager(this);
        this.databaseManager = new DatabaseManager(this);
        this.integrationManager = new IntegrationManager(this);
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
        configManager.loadConfig();
        messages.loadMessages();
        effectsManager.loadEffects();
        
        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if (configManager.isDatabaseEnabled()) {
            databaseManager.connect();
        }
        
        // –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
        integrationManager.startIntegrations();
        
        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
        getCommand("speedflash").setExecutor(new SpeedFlashCommand(this));
        getCommand("speedflashgui").setExecutor(new SpeedFlashGUICommand(this));
        getCommand("speedflashperms").setExecutor(new SpeedFlashPermissionsCommand(this));
        
        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π
        getServer().getPluginManager().registerEvents(new PlayerListener(this), this);
        getServer().getPluginManager().registerEvents(new ChatListener(this), this);
        getServer().getPluginManager().registerEvents(new EntityListener(this), this);
        
        getLogger().info("¬ßb" + getName() + " ¬ßa—É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!");
        getLogger().info("¬ßa–í–µ—Ä—Å–∏—è: " + getDescription().getVersion());
        getLogger().info("¬ßa–ê–≤—Ç–æ—Ä: " + getDescription().getAuthors());
    }

    @Override
    public void onDisable() {
        if (databaseManager != null) {
            databaseManager.disconnect();
        }
        getLogger().info("¬ßb" + getName() + " ¬ßc–æ—Ç–∫–ª—é—á–µ–Ω");
    }

    public static SpeedFlash getInstance() {
        return instance;
    }

    public ConfigManager getConfigManager() {
        return configManager;
    }

    public Messages getMessages() {
        return messages;
    }

    public EffectsManager getEffectsManager() {
        return effectsManager;
    }

    public DatabaseManager getDatabaseManager() {
        return databaseManager;
    }

    public IntegrationManager getIntegrationManager() {
        return integrationManager;
    }

case "lang":
    if (!sender.hasPermission(Permissions.ADMIN)) {
        sender.sendMessage(messages.getNoPermission());
        return true;
    }
    handleLanguageCommand(sender, args);
    break;

private void handleLanguageCommand(CommandSender sender, String[] args) {
    if (args.length < 2) {
        sender.sendMessage("¬ß6üåç –î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏:");
        sender.sendMessage("¬ße/speedflash lang it_IT ¬ß7- Italiano üáÆüáπ");
        sender.sendMessage("¬ße/speedflash lang ru_RU ¬ß7- –†—É—Å—Å–∫–∏–π üá∑üá∫");
        sender.sendMessage("¬ße/speedflash lang en_US ¬ß7- English üá∫üá∏");
        return;
    }
    
    String lang = args[1];
    if (plugin.getLocalization().setLanguage(lang)) {
        sender.sendMessage("¬ßaüåç –Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: " + lang);
    } else {
        sender.sendMessage("¬ßc‚ùå –Ø–∑—ã–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è: " + lang);
    }
}
